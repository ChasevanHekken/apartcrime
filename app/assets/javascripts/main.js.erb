var map, pointarray, heatmap;
var markers = [];

var apart_points = gon.marker_points;

var homicide = gon.homicide;
var rape = gon.rape;
var robbery = gon.robbery;
var assault = gon.assault;
var burglary = gon.burglary;
var theft = gon.theft;
var gta = gon.gta;

var homicide_heat = [];
var rape_heat = [];
var robbery_heat = [];
var assault_heat = [];
var burglary_heat = [];
var theft_heat = [];
var gta_heat = [];

for (var i = 0; i < homicide.length; i++) {
  if(homicide[i][0] != null) {
    var latLng = new google.maps.LatLng(homicide[i][0], homicide[i][1]);
    homicide_heat.push(latLng);
  }
}

for (var i = 0; i < rape.length; i++) {
  if(rape[i][0] != null) {
    var latLng = new google.maps.LatLng(rape[i][0], rape[i][1]);
    rape_heat.push(latLng);
  }
}

for (var i = 0; i < robbery.length; i++) {
  if(robbery[i][0] != null) {
    var latLng = new google.maps.LatLng(robbery[i][0], robbery[i][1]);
    robbery_heat.push(latLng);
  }
}

for (var i = 0; i < assault.length; i++) {
  if(assault[i][0] != null) {
    var latLng = new google.maps.LatLng(assault[i][0], assault[i][1]);
    assault_heat.push(latLng);
  }
}

for (var i = 0; i < burglary.length; i++) {
  if(burglary[i][0] != null) {
    var latLng = new google.maps.LatLng(burglary[i][0], burglary[i][1]);
    burglary_heat.push(latLng);
  }
}

for (var i = 0; i < theft.length; i++) {
  if(theft[i][0] != null) {
    var latLng = new google.maps.LatLng(theft[i][0], theft[i][1]);
    theft_heat.push(latLng);
  }
}

for (var i = 0; i < gta.length; i++) {
  if(gta[i][0] != null) {
    var latLng = new google.maps.LatLng(gta[i][0], gta[i][1]);
    gta_heat.push(latLng);
  }
}

var marker, i, infowindow, content;

function initialize() {
  var mapOptions = {
    center: new google.maps.LatLng(39.9500, -75.1667),
    zoom: 12
  };

  map = new google.maps.Map(document.getElementById('map-canvas'),
    mapOptions);

  heatmap = new google.maps.visualization.HeatmapLayer({
    data: []
  });

  heatmap.setMap(map);

  for (i = 0; i < apart_points.length; i++) {
    if(apart_points[i][0] != null) {
      marker = new google.maps.Marker({
        position: { lat: apart_points[i][0], lng: apart_points[i][1]} ,
        map: map,
        title: apart_points[i][3]
      });
      markers.push(marker);

      infowindow = new google.maps.InfoWindow({
        content: apart_points[i][2]
      });

      content = apart_points[i][2];

      google.maps.event.addListener(marker, 'click', (function(marker,content,infowindow){
        return function() {
          infowindow.setContent(content);
          infowindow.open(map,marker);
          setTimeout(function () { infowindow.close(); }, 6000);
        };
      })(marker,content,infowindow));
    }
  };
}

google.maps.event.addDomListener(window, 'load', initialize);

function toggleHeatmap() {
  heatmap.setMap(heatmap.getMap() ? null : map);
}

function setAllMap(map) {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
  }
}

function clearMarkers() {
  setAllMap(null);
}

function showMarkers() {
  setAllMap(map);
}

var dataPointsHidden = false

function toggleDatapoints() {
  if (dataPointsHidden == true) {
    clearMarkers();
  } else {
    showMarkers();
  }
  dataPointsHidden = !dataPointsHidden;
}

var homicide_bool = true;
var rape_bool = true;
var robbery_bool = true;
var assault_bool = true;
var burglary_bool = true;
var theft_bool = true;
var gta_bool = true;

function toggleHomicide() {
  if (homicide_bool) {
    heatmap.setData(heatmap.getData().getArray().concat(homicide_heat));
    homicide_bool=false;
  } else {
    filtered = heatmap.getData().getArray().filter(function(element) {
      return $.inArray(element, homicide_heat) < 0;
    });
    heatmap.setData(filtered);
    homicide_bool=true;
  }
}

function toggleRape() {
  if (rape_bool) {
    heatmap.setData(heatmap.getData().getArray().concat(rape_heat));
    rape_bool=false;
  } else {
    filtered = heatmap.getData().getArray().filter(function(element) {
      return $.inArray(element, rape_heat) < 0;
    });
    heatmap.setData(filtered);
    rape_bool=true;
  }
}

function toggleRobbery() {
  if (robbery_bool) {
    heatmap.setData(heatmap.getData().getArray().concat(robbery_heat));
    robbery_bool=false;
  } else {
    filtered = heatmap.getData().getArray().filter(function(element) {
      return $.inArray(element, robbery_heat) < 0;
    });
    heatmap.setData(filtered);
    robbery_bool=true;
  }
}

function toggleAssault() {
  if (assault_bool) {
    heatmap.setData(heatmap.getData().getArray().concat(assault_heat));
    assault_bool=false;
  } else {
    filtered = heatmap.getData().getArray().filter(function(element) {
      return $.inArray(element, assault_heat) < 0;
    });
    heatmap.setData(filtered);
    assault_bool=true;
  }
}

function toggleBurglary() {
  if (burglary_bool) {
    heatmap.setData(heatmap.getData().getArray().concat(burglary_heat));
    burglary_bool=false;
  } else {
    filtered = heatmap.getData().getArray().filter(function(element) {
      return $.inArray(element, burglary_heat) < 0;
    });
    heatmap.setData(filtered);
    burglary_bool=true;
  }
}

function toggleTheft() {
  if (theft_bool) {
    heatmap.setData(heatmap.getData().getArray().concat(theft_heat));
    theft_bool=false;
  } else {
    filtered = heatmap.getData().getArray().filter(function(element) {
      return $.inArray(element, theft_heat) < 0;
    });
    heatmap.setData(filtered);
    theft_bool=true;
  }
}

function toggleGrandTheftAuto() {
  if (gta_bool) {
    heatmap.setData(heatmap.getData().getArray().concat(gta_heat));
    gta_bool=false;
  } else {
    filtered = heatmap.getData().getArray().filter(function(element) {
      return $.inArray(element, gta_heat) < 0;
    });
    heatmap.setData(filtered);
    gta_bool=true;
  }
}
